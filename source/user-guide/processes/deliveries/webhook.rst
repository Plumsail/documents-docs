Webhook delivery
================

The Webhook delivery sends a POST request to a specified URL. The request contains a link to the generated document.

Configure delivery
------------------

First, you have to fill the URL where the request will be sent:

.. image:: ../../../_static/img/user-guide/processes/webhook-delivery.png
    :alt: Webhook delivery


Optionally, you can specify HTTP headers or JSON object that will be sent in the same request:

.. image:: ../../../_static/img/user-guide/processes/webhook-delivery-tokens.png
    :alt: Custom headers and JSON

.. include:: ../tokens-description-part.rst

On the screen above we specified user ID in header (:code:`{{user.id}}`), user name and user age in JSON data (:code:`{{user.name}}` and :code:`{{user.age}}`).

Structure of POST request
-------------------------

Example of POST request that will be sent to your URL:

.. code::

  POST https://webhook.site/2fe03ab2-ed88-483b-9fa2-26260d9a7a22 HTTP/1.1    
  Content-Type: application/json
  Content-Length: 253    
  Connection: close
  desired-http-header-1: test value 1
  user-identifier: 546

  {
    "fileUrl": "https://actions2.blob.core.windows.net/data-storage/2020-04-vaomosm3.am3?sv=2018-03-28&sr=b&sig=Lu34U6re43Zr2G2TH%2FGTBkYDyaItPKx%2BjDXX18%2FGX9I%3D&se=2020-04-13T15%3A00%3A53Z&sp=r&rscd=inline",
    "data": "{\n    \"userName\": \"Bob Barley\",\n    \"age\": 42\n}"
  }

That are two custom headers that we added in the delivery settings (:code:`desired-http-header-1` and :code:`user-identifier`).

The body of the POST request contains two properties:

- :code:`fileUrl` - It is a link to the result document generated by your process. You can use this link to download the document from your code.
- :code:`data` - It is a JSON data that you configured in the delivery.

.. note:: You can use sites like `webhook.site <https://webhook.site/>`_ for debugging this delivery.